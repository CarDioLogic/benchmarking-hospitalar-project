@import "../../../../styles/_variables.scss";

.icon-login {
  transform: scale(2);
}

.dashboard {
  box-sizing: border-box;
  background-color: $main-blue;
  color: $fill-white;
  min-width: 200px;
  max-width: 30%;
  z-index: 60;

  @media (max-width: 600px) {
    min-width: none;
    max-width: none;
    clip-path: none;
    border: 10px solid $darker-main-blue;
    border-radius: 1em;
    margin: 0 auto;
  }
}
@media (min-width: 600px) {
  //animacoes ao contrario deveria expandir quando esta fechado e vice versa!!!
  .dashboard.is-open {
    animation: expandDashboarb 200ms ease-in forwards;
  }
  .dashboard.is-closed {
    animation: collapseDashboard 200ms ease-in forwards;
  }

  @keyframes expandDashboarb {
    from {
      min-width: 50px;
    }
    to {
      min-width: 200px;

      
    }
  }

  @keyframes collapseDashboard {
    from {
      min-width: 200px;
    }
    to {
      min-width: 50px;

    }
  }
}

.dashboardTitle {
  margin: 0;
  font-size: 1.2rem;
  color: $fill-white;

  @media (max-width: 600px) {
    padding: 0;
  }
}

.dashboardOptionsContainer {
  margin-top: 1em;
  display: flex;
  flex-direction: column;
  gap: 0.5em;
}

.dashboardOptionsContainer.is-open {
  max-width: 20px;
  animation: showOptions 200ms ease-in forwards 200ms;
}
.dashboardOptionsContainer.is-closed {
  animation: hideOptions 200ms ease-in forwards;
}
  @keyframes hideOptions {
    0% {
      opacity: 1;
    }
    99% {
      opacity: 0;
    }
    100% {
      display: none;
    }
  }
  @keyframes showOptions {
    from {
      max-width: 20px;

      opacity: 0;
    }
    to {
      opacity: 1;
      max-width: 190px;
    }
  }

.titleSection.is-open {
  max-width: 20px;

  animation: showOptions 200ms ease-in forwards 200ms;
}
.titleSection.is-closed {
  animation: hideOptions 200ms ease-in forwards;
}


.dashboardHeader {
  display: flex;
  align-items: center;
  justify-content: space-around;
  cursor: pointer;
}
.dashboardHeader.is-open {
  .plusIcon.is-open::before,
  .plusIcon.is-open::after {
    background: $fill-white;
  }
}
.dashboardHeader.is-closed {
  display: flex;
  flex-direction: column;
  justify-content: start;
  height: 80%;
}

.dashboardOption {
  font-size: 1.4em;


  cursor: pointer;
  display: flex;
  padding-left: 2em;
  justify-content: flex-center;
  align-items: center;
  gap: 0.5em;
  background-color: transparent;
  color: $fill-white;
  box-sizing: border-box;

  h2 {
    margin: 0.5em;
  }
  @media (max-width: 600px) {
  }
}
.dashboardOption.is-open,
.dashboardOption:hover {
  background-color: $secondary-blue;
  color: $main-blue;

  .plusIcon::before,
  .plusIcon::after {
    background: $main-blue;
  }
}

.subMenu {
  clip-path: polygon(0 0, 100% 0, 100% 100%, 30% 100%, 0 0);
  margin-top: -0.3em;
  background-color: $secondary-blue;
  flex-direction: column;
  padding-block: 1em;
  padding-right: 2em;
  gap: 0.5em;
  align-items: flex-end;
  justify-content: center;
  display: none;
}
.subMenuItem {
  display: flex;
  align-items: center;
  gap: 0.5em;

  a {
    cursor: pointer;
    text-decoration: none;
    color: $main-blue;
    font-size: 1.05em;
  }
  a:hover {
    text-decoration: underline;
  }
}
.subMenu.is-open {
  display: flex;
  animation: expandMenu 200ms ease-in forwards;
}
.subMenu.is-closed {
  animation: collapseMenu 200ms ease-in forwards;
}

@keyframes collapseMenu {
  0% {
    display: flex;
    height: auto;
    opacity: 1;
  }
  99% {
    height: 0;
    opacity: 0;
  }
  100% {
    display: none;
  }
}
@keyframes expandMenu {
  from {
    height: 0;
    height: 0;
    opacity: 0;
  }
  to {
    height: auto;
    height: auto;
    opacity: 1;
  }
}

.plusIcon {
  /*     width: 2em;
    height: 2em;
    border: solid 2px $fill-white;
    border-radius: 50%; */
  transition: transform 100ms ease-out;
  cursor: pointer;
}

.plusIcon::before,
.plusIcon::after {
  cursor: pointer;
  content: "";
  display: block;
  width: 1em;
  height: 3px;
  background: $fill-white;
}

.plusIcon::before {
  transform: translateY(0px);
}

.plusIcon::after {
  transform: rotate(-90deg) translateX(3px);
}

/* vou precisar de JS para abrir e fechar conteudo */
.plusIcon.is-open::before,
.plusIcon.is-open::after {
  background: $main-blue;
}
.plusIcon.is-open {
  transform: rotate(45deg);
}

/* ._desktopHidden{
    display: none;

    @media (max-width: 600px){
        display: block;
    }
} */
