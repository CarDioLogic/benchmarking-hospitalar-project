# Use a imagem base oficial do PHP com FPM
FROM php:7.4-fpm

# Atualiza os pacotes e instala as dependências necessárias
RUN apt-get update && apt-get install -y \
    libpq-dev \
    libzip-dev \
    unzip \
    git \
    curl \
    wget \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Instale as extensões necessárias do PHP, incluindo PostgreSQL
RUN docker-php-ext-install pdo pdo_pgsql pgsql zip

# Instale o Dockerize
RUN wget https://github.com/jwilder/dockerize/releases/download/v0.6.1/dockerize-linux-amd64-v0.6.1.tar.gz \
    && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-v0.6.1.tar.gz \
    && rm dockerize-linux-amd64-v0.6.1.tar.gz

# Instale o Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Define o diretório de trabalho dentro do container
WORKDIR /var/www/html

# Copie o código da aplicação para o contêiner
COPY . .

# Configure as permissões adequadas para diretórios Laravel
RUN chown -R www-data:www-data /var/www/html/storage /var/www/html/bootstrap/cache

# Permita que o Composer seja executado como root
ENV COMPOSER_ALLOW_SUPERUSER 1

# Instale as dependências do Composer
RUN composer install --no-interaction --optimize-autoloader --no-dev

# Exponha a porta 9000
EXPOSE 9000

RUN php artisan clear:all

# Copie o script de entrypoint para o contêiner
COPY entrypoint.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/entrypoint.sh

# Use o script de entrypoint para configurar o ambiente no momento do lançamento
ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]

# Comando para iniciar o PHP-FPM
CMD ["php-fpm"]
